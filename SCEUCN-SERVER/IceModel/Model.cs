//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Model.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace model
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public enum TipoVehiculo
    {
        Auto,
        Camioneta,
        Moto
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public sealed class TipoVehiculoHelper
    {
        public static void write(global::Ice.OutputStream ostr, TipoVehiculo v)
        {
            ostr.writeEnum((int)v, 2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public static TipoVehiculo read(global::Ice.InputStream istr)
        {
            TipoVehiculo v;
            v = (TipoVehiculo)istr.readEnum(2);
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public enum TipoLogo
    {
        Funcionario,
        Estudiante
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public sealed class TipoLogoHelper
    {
        public static void write(global::Ice.OutputStream ostr, TipoLogo v)
        {
            ostr.writeEnum((int)v, 1);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public static TipoLogo read(global::Ice.InputStream istr)
        {
            TipoLogo v;
            v = (TipoLogo)istr.readEnum(1);
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public enum Planta
    {
        Oficial,
        Fija,
        Temporal
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public sealed class PlantaHelper
    {
        public static void write(global::Ice.OutputStream ostr, Planta v)
        {
            ostr.writeEnum((int)v, 2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public static Planta read(global::Ice.InputStream istr)
        {
            Planta v;
            v = (Planta)istr.readEnum(2);
            return v;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Logo : global::Ice.Value
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string id;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public TipoLogo tipo;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string fecha;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Logo()
        {
            this.id = "";
            this.fecha = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Logo(string id, TipoLogo tipo, string fecha)
        {
            this.id = id;
            this.tipo = tipo;
            this.fecha = fecha;
            ice_initialize();
        }

        #endregion

        private const string _id = "::model::Logo";

        public static new string ice_staticId()
        {
            return _id;
        }
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeString(id);
            ostr_.writeEnum((int)tipo, 1);
            ostr_.writeString(fecha);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            id = istr_.readString();
            tipo = (TipoLogo)istr_.readEnum(1);
            fecha = istr_.readString();
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Persona : global::Ice.Value
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string rut;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string nombre;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string depto;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string unidad;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string oficina;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string rol;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string cargo;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string telefono;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Planta planta;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string inicioContrato;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string terminoContrato;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Persona()
        {
            this.rut = "";
            this.nombre = "";
            this.depto = "";
            this.unidad = "";
            this.oficina = "";
            this.rol = "";
            this.cargo = "";
            this.telefono = "";
            this.inicioContrato = "";
            this.terminoContrato = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Persona(string rut, string nombre, string depto, string unidad, string oficina, string rol, string cargo, string telefono, Planta planta, string inicioContrato, string terminoContrato)
        {
            this.rut = rut;
            this.nombre = nombre;
            this.depto = depto;
            this.unidad = unidad;
            this.oficina = oficina;
            this.rol = rol;
            this.cargo = cargo;
            this.telefono = telefono;
            this.planta = planta;
            this.inicioContrato = inicioContrato;
            this.terminoContrato = terminoContrato;
            ice_initialize();
        }

        #endregion

        private const string _id = "::model::Persona";

        public static new string ice_staticId()
        {
            return _id;
        }
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeString(rut);
            ostr_.writeString(nombre);
            ostr_.writeString(depto);
            ostr_.writeString(unidad);
            ostr_.writeString(oficina);
            ostr_.writeString(rol);
            ostr_.writeString(cargo);
            ostr_.writeString(telefono);
            ostr_.writeEnum((int)planta, 2);
            ostr_.writeString(inicioContrato);
            ostr_.writeString(terminoContrato);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            rut = istr_.readString();
            nombre = istr_.readString();
            depto = istr_.readString();
            unidad = istr_.readString();
            oficina = istr_.readString();
            rol = istr_.readString();
            cargo = istr_.readString();
            telefono = istr_.readString();
            planta = (Planta)istr_.readEnum(2);
            inicioContrato = istr_.readString();
            terminoContrato = istr_.readString();
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Vehiculo : global::Ice.Value
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Persona persona;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string anio;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string marca;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public string patente;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public TipoVehiculo tipo;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Vehiculo()
        {
            this.anio = "";
            this.marca = "";
            this.patente = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        public Vehiculo(Persona persona, string anio, string marca, string patente, TipoVehiculo tipo)
        {
            this.persona = persona;
            this.anio = anio;
            this.marca = marca;
            this.patente = patente;
            this.tipo = tipo;
            ice_initialize();
        }

        #endregion

        private const string _id = "::model::Vehiculo";

        public static new string ice_staticId()
        {
            return _id;
        }
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeValue(persona);
            ostr_.writeString(anio);
            ostr_.writeString(marca);
            ostr_.writeString(patente);
            ostr_.writeEnum((int)tipo, 2);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            istr_.readValue((Persona v) => { this.persona = v; });
            anio = istr_.readString();
            marca = istr_.readString();
            patente = istr_.readString();
            tipo = (TipoVehiculo)istr_.readEnum(2);
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Controlador : global::Ice.Object, ControladorOperations_
    {
    }
}

namespace model
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public delegate void Callback_Controlador_obtenerListadoVehiculos(Vehiculo[] ret);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public delegate void Callback_Controlador_buscarVehiculo(Vehiculo ret);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public delegate void Callback_Controlador_registrarIngreso();
}

namespace model
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public interface ControladorPrx : global::Ice.ObjectPrx
    {
        Vehiculo[] obtenerListadoVehiculos(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<Vehiculo[]> obtenerListadoVehiculosAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Controlador_obtenerListadoVehiculos> begin_obtenerListadoVehiculos(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_obtenerListadoVehiculos(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_obtenerListadoVehiculos(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        Vehiculo[] end_obtenerListadoVehiculos(global::Ice.AsyncResult asyncResult);

        Vehiculo buscarVehiculo(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<Vehiculo> buscarVehiculoAsync(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Controlador_buscarVehiculo> begin_buscarVehiculo(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_buscarVehiculo(string patente, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_buscarVehiculo(string patente, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        Vehiculo end_buscarVehiculo(global::Ice.AsyncResult asyncResult);

        void registrarIngreso(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task registrarIngresoAsync(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Controlador_registrarIngreso> begin_registrarIngreso(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_registrarIngreso(string patente, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_registrarIngreso(string patente, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_registrarIngreso(global::Ice.AsyncResult asyncResult);
    }
}

namespace model
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public interface ControladorOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        Vehiculo[] obtenerListadoVehiculos(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        Vehiculo buscarVehiculo(string patente, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
        void registrarIngreso(string patente, global::Ice.Current current = null);
    }
}

namespace model
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public sealed class VehiculosHelper
    {
        public static void write(global::Ice.OutputStream ostr, Vehiculo[] v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    ostr.writeValue(v[ix]);
                }
            }
        }

        public static Vehiculo[] read(global::Ice.InputStream istr)
        {
            Vehiculo[] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new Vehiculo[szx];
                for(int ix = 0; ix < szx; ++ix)
                {
                    istr.readValue(global::IceInternal.Patcher.arrayReadValue<Vehiculo>(v, ix));
                }
            }
            return v;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    [global::System.Serializable]
    public sealed class ControladorPrxHelper : global::Ice.ObjectPrxHelperBase, ControladorPrx
    {
        public ControladorPrxHelper()
        {
        }

        public ControladorPrxHelper(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        #region Synchronous operations

        public Vehiculo[] obtenerListadoVehiculos(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_obtenerListadoVehiculosAsync(context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public Vehiculo buscarVehiculo(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_buscarVehiculoAsync(patente, context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void registrarIngreso(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_registrarIngresoAsync(patente, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task<Vehiculo[]> obtenerListadoVehiculosAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_obtenerListadoVehiculosAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<Vehiculo[]> _iceI_obtenerListadoVehiculosAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_obtenerListadoVehiculos_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<Vehiculo[]>(progress, cancel);
            _iceI_obtenerListadoVehiculos(context, synchronous, completed);
            return completed.Task;
        }

        private const string _obtenerListadoVehiculos_name = "obtenerListadoVehiculos";

        private void _iceI_obtenerListadoVehiculos(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<Vehiculo[]>(completed);
            outAsync.invoke(
                _obtenerListadoVehiculos_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                read: (global::Ice.InputStream istr) =>
                {
                    Vehiculo[] ret;
                    ret = VehiculosHelper.read(istr);
                    istr.readPendingValues();
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<Vehiculo> buscarVehiculoAsync(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_buscarVehiculoAsync(patente, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<Vehiculo> _iceI_buscarVehiculoAsync(string iceP_patente, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_buscarVehiculo_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<Vehiculo>(progress, cancel);
            _iceI_buscarVehiculo(iceP_patente, context, synchronous, completed);
            return completed.Task;
        }

        private const string _buscarVehiculo_name = "buscarVehiculo";

        private void _iceI_buscarVehiculo(string iceP_patente, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<Vehiculo>(completed);
            outAsync.invoke(
                _buscarVehiculo_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    ostr.writeString(iceP_patente);
                },
                read: (global::Ice.InputStream istr) =>
                {
                    Vehiculo ret = null;
                    istr.readValue((Vehiculo v) => {ret = v; });
                    istr.readPendingValues();
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task registrarIngresoAsync(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_registrarIngresoAsync(patente, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_registrarIngresoAsync(string iceP_patente, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_registrarIngreso(iceP_patente, context, synchronous, completed);
            return completed.Task;
        }

        private const string _registrarIngreso_name = "registrarIngreso";

        private void _iceI_registrarIngreso(string iceP_patente, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _registrarIngreso_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    ostr.writeString(iceP_patente);
                });
        }

        #endregion

        #region Asynchronous operations

        public global::Ice.AsyncResult<Callback_Controlador_obtenerListadoVehiculos> begin_obtenerListadoVehiculos(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_obtenerListadoVehiculos(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_obtenerListadoVehiculos(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_obtenerListadoVehiculos(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_obtenerListadoVehiculos(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_obtenerListadoVehiculos(context, callback, cookie, false);
        }

        public Vehiculo[] end_obtenerListadoVehiculos(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _obtenerListadoVehiculos_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<Vehiculo[]>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Controlador_obtenerListadoVehiculos> begin_obtenerListadoVehiculos(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_obtenerListadoVehiculos_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Controlador_obtenerListadoVehiculos, Vehiculo[]>(
                (Callback_Controlador_obtenerListadoVehiculos cb, Vehiculo[] ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _obtenerListadoVehiculos_name, cookie, completedCallback);
            _iceI_obtenerListadoVehiculos(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_Controlador_buscarVehiculo> begin_buscarVehiculo(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_buscarVehiculo(patente, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_buscarVehiculo(string patente, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_buscarVehiculo(patente, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_buscarVehiculo(string patente, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_buscarVehiculo(patente, context, callback, cookie, false);
        }

        public Vehiculo end_buscarVehiculo(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _buscarVehiculo_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<Vehiculo>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Controlador_buscarVehiculo> begin_buscarVehiculo(string iceP_patente, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_buscarVehiculo_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Controlador_buscarVehiculo, Vehiculo>(
                (Callback_Controlador_buscarVehiculo cb, Vehiculo ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _buscarVehiculo_name, cookie, completedCallback);
            _iceI_buscarVehiculo(iceP_patente, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_Controlador_registrarIngreso> begin_registrarIngreso(string patente, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_registrarIngreso(patente, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_registrarIngreso(string patente, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_registrarIngreso(patente, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_registrarIngreso(string patente, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_registrarIngreso(patente, context, callback, cookie, false);
        }

        public void end_registrarIngreso(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _registrarIngreso_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Controlador_registrarIngreso> begin_registrarIngreso(string iceP_patente, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Controlador_registrarIngreso, object>(
                (Callback_Controlador_registrarIngreso cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _registrarIngreso_name, cookie, completedCallback);
            _iceI_registrarIngreso(iceP_patente, context, synchronous, completed);
            return completed;
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ControladorPrx checkedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ControladorPrx r = b as ControladorPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ControladorPrxHelper h = new ControladorPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ControladorPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ControladorPrx r = b as ControladorPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ControladorPrxHelper h = new ControladorPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ControladorPrx checkedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ControladorPrxHelper h = new ControladorPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ControladorPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ControladorPrxHelper h = new ControladorPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ControladorPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ControladorPrx r = b as ControladorPrx;
            if(r == null)
            {
                ControladorPrxHelper h = new ControladorPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ControladorPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            ControladorPrxHelper h = new ControladorPrxHelper();
            h.iceCopyFrom(bb);
            return h;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::model::Controlador"
        };

        public static string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, ControladorPrx v)
        {
            ostr.writeProxy(v);
        }

        public static ControladorPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                ControladorPrxHelper result = new ControladorPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace model
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.2")]
    public abstract class ControladorDisp_ : global::Ice.ObjectImpl, Controlador
    {
        #region Slice operations

        public abstract Vehiculo[] obtenerListadoVehiculos(global::Ice.Current current = null);

        public abstract Vehiculo buscarVehiculo(string patente, global::Ice.Current current = null);

        public abstract void registrarIngreso(string patente, global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::model::Controlador"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return _ids[1];
        }

        public static new string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_obtenerListadoVehiculos(Controlador obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            var ret = obj.obtenerListadoVehiculos(current);
            var ostr = inS.startWriteParams();
            VehiculosHelper.write(ostr, ret);
            ostr.writePendingValues();
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_buscarVehiculo(Controlador obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            string iceP_patente;
            iceP_patente = istr.readString();
            inS.endReadParams();
            var ret = obj.buscarVehiculo(iceP_patente, current);
            var ostr = inS.startWriteParams();
            ostr.writeValue(ret);
            ostr.writePendingValues();
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_registrarIngreso(Controlador obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            string iceP_patente;
            iceP_patente = istr.readString();
            inS.endReadParams();
            obj.registrarIngreso(iceP_patente, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        private static readonly string[] _all =
        {
            "buscarVehiculo",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "obtenerListadoVehiculos",
            "registrarIngreso"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_buscarVehiculo(this, inS, current);
                }
                case 1:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 2:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 5:
                {
                    return iceD_obtenerListadoVehiculos(this, inS, current);
                }
                case 6:
                {
                    return iceD_registrarIngreso(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }
}
